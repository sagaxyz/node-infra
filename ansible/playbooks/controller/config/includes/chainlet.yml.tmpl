---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Name }}"
  namespace: "{{ .Namespace }}"
spec:
  type: ClusterIP
  selector:
    app: "{{ .Name }}"
  ports:
    - name: tendermintrpc
      port: 26657
      targetPort: 26657
    - name: tendermintrpc-p2p
      port: 26656
      targetPort: 26656
    - name: cosmosgrpc
      port: 9090
      targetPort: 9090
    - name: tendermintlcd
      port: 1317
      targetPort: 1317
    - name: evmjsonrpc
      port: 8545
      targetPort: 8545
    - name: evmws
      port: 8546
      targetPort: 8546
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Name }}-sa"
  namespace: "{{ .Namespace }}"
  annotations:
    eks.amazonaws.com/role-arn: "%%% chainlet_role_info.arn %%%"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "saga-{{ .Name }}-pvc"
  namespace: "{{ .Namespace }}"
  labels:
    app: "{{ .Name }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "100Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Name }}"
  namespace: "{{ .Namespace }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Name }}"
        chainId: "{{ .ChainId }}"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "26660"
        saga.xyz/stack-version: "{{ .ChainletStackVersion }}"
        saga.xyz/stack-name: "{{ .ChainletStackName }}"
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
        - name: "saga-{{ .Name }}-persistent-storage"
          persistentVolumeClaim:
            claimName: "saga-{{ .Name }}-pvc"
        - name: "fluentd-logs"
          hostPath:
            path: /var/log/saga
            type: DirectoryOrCreate
      serviceAccountName: "{{ .Name }}-sa"
      containers:
        - image: "{{ .ChainletImage }}"
          name: "{{ .Name }}"
          imagePullPolicy: Always
          env:
          - name: UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: CHAINID
            value: "{{ .ChainId }}"
          - name: LOGLEVEL
            value: "info"
          - name: KEYNAME
            value: "{{ .Name }}-operator-key"
          - name: EXTERNAL_ADDRESS
            value: "{{ .ChainletExternalAddress }}"
          - name: MAINTAINERS
            value: "{{ .ChainletMaintainers }}"
          - name: VALIDATOR_ADDRESSES_COSMOS
            value: "{{ .ChainletValidators }}"
          - name: STAKE_OWNER_ADDRESS
            value: "%%% stake_owner_address %%%"
          - name: KEYPASSWD
            value: "%%% keychain_password %%%"
{% if voting_period is defined %}
          - name: VOTING_PERIOD
            value: "%%% voting_period %%%"
{% endif %}
{% if node_rpc_domain is defined %}
          - name: NODE_RPC
            value: "https://{{ .ChainletName }}-{{ .ChainIdNumber }}-1.%%% node_rpc_domain %%%:443"
{% endif %}
{% if stake_amount is defined %}
          - name: STAKE_AMOUNT
            value: "%%% stake_amount %%%"
{% endif %}
{{ range $key, $value := .ChainletEnvVars }}
          - name: {{ $key | ToUpper }}
            value: "{{ $value }}"
{{ end }}
{{ range $key, $value := .ChainletSpcVars }}
          - name: SPCPARAM_{{ $key | ToUpper }}
            value: "{{ $value }}"
{{ end }}
          ports:
            - containerPort: 26657
            - containerPort: 26656
            - containerPort: 9090
            - containerPort: 1317
            - containerPort: 8545
            - containerPort: 8546
            - containerPort: 26660
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
            limits:
              memory: "4Gi"
              cpu: "2"
          volumeMounts:
            - name: "saga-{{ .Name }}-persistent-storage"
              mountPath: "/root/.sagaosd"
              subPath: sagaosd
            - name: "fluentd-logs"
              mountPath: "/var/log/saga"
              subPathExpr: $(UID)
{% if relayer_enabled %}
        - image: "{{ .RelayerImage }}"
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "2Gi"
          imagePullPolicy: Always
          name: relayer
          command: ["bash"]
          args:
            - start-rly.sh
          env:
            - name: CHAINLET_RPC_ADDRESS
              value: "http://localhost:26657"
            - name: CHAINLET_CHAIN_ID
              value: "{{ .ChainId }}"
            - name: CHAINLET_DENOM
              value: {{ .CoinDenom }}
            - name: RELAYER_CHAINLET_MNEMONIC
              value: {{ .RelayerChainletMnemonic }}
            - name: SPC_CHAIN_ID
              value: {{ .RelayerSpcChainId }}
            - name: SPC_RPC_EXTERNAL_ADDRESS
              value: {{ .RelayerSpcRpcAddress }}
            - name: SPC_DENOM
              value: {{ .RelayerSpcDenom }}
            - name: RELAYER_SPC_MNEMONIC
              value: {{ .RelayerSpcMnemonic }}
          ports:
            - containerPort: 5183
{% endif %}
